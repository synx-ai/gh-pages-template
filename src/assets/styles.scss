@use "sass:math";

$synx-dark-color: #141819;
$synx-darker-color: #111415;
$synx-darkest-color: #0d1011;
$synx-black-color: #070809;

$synx-medium-darker-color: #171b1c;
$synx-medium-dark-color: #212527;

$synx-light-color: #8b8d8e;
$synx-lighter-color: #e2e3e4;
$synx-lightest-color: #b9bbbb;
$synx-white-color: #ffffff;

$width: 96%;
$gutter: 4%;
$breakpoint-small: 33.75em; // 540px
$breakpoint-med: 45em; // 720px
$breakpoint-large: 60em; // 960px

$border-radius: 6px;
$border-radius-sm: 3px;

@import url("https://fonts.googleapis.com/css2?family=Cousine&family=Roboto:wght@400;900&display=swap");

// fonts
$font-family: "Roboto", Helvetica, sans-serif;
$font-weight-light: 300;
$font-weight-regular: 400;
$font-weight-heavy: 900;
$font-height: 1.5;

$synx-background-color: $synx-dark-color;
$synx-box-shadow-color: adjust-color($synx-black-color, $alpha: -0.75);

$synx-box-shadow: 0 2px 8px 1px $synx-box-shadow-color;

html,
body,
div#root {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  left: 0;
  top: 0;
  font-size: 100%;
  background-color: $synx-background-color;

  font-family: $font-family;
  color: $synx-lighter-color;
  line-height: $font-height;

  a {
    color: white;
    text-decoration: none;

    &:hover {
      text-decoration: underline;
      text-decoration-style: wavy;
    }
  }

  code,
  code *,
  pre {
    font-family: "Cousine", monospace;
    font-size: 0.875rem;
    background-color: $synx-darkest-color;
    padding: 5px;
    border-radius: $border-radius-sm;
    overflow-x: scroll;
  }

  pre {
    margin-bottom: 0px;
    padding-bottom: 0px;
  }

  h1 {
    font-size: 3.6rem;
    &::after {
      background-color: red;
      content: " ";
    }
  }

  h2 {
    font-size: 2rem;
    margin-top: 5rem;
  }

  h3 {
    font-size: 1.375rem;
    margin-top: 2.5rem;
  }

  h4 {
    font-size: 1.125rem;
  }

  h5 {
    font-size: 1rem;
  }

  h6 {
    font-size: 0.875rem;
  }

  p {
    font-size: 1.125rem;
    font-weight: 200;
    line-height: 1.8;
  }

  .hero-img {
    background-size: cover;
    background-position: center center;
    display: flex;
    max-width: 100%;
    height: 0px;
    padding: 0px 0px 28.2927%;
  }

  .tooltip {
    position: relative;
    display: inline-block;
  }

  .tooltip .tooltiptext {
    visibility: hidden;
    width: 150px;
    background-color: $synx-black-color;
    color: $synx-lightest-color;
    text-align: center;
    border-radius: $border-radius-sm;
    padding: 5px 0;
    position: absolute;
    z-index: 1;
    bottom: 150%;
    left: 50%;
    margin-left: -75px;

    opacity: 0;
    transition: opacity 1.5s;
  }

  .tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -8px;
    border-width: 8px;
    border-style: solid;
    border-color: $synx-black-color transparent transparent transparent;
  }

  .tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
  }

  .outer {
    background-color: $synx-darkest-color;
    background: linear-gradient(45deg, #090c0f, #10161a);
    margin: 10px auto;
    padding: 10px;
    border-radius: $border-radius;
    box-shadow: $synx-box-shadow;

    .dot {
      display: inline-block;
      width: 10px;
      height: 10px;
      background: #f9f9f9;
      border-radius: 50%;
      margin: 0 4px 0 0;

      &.red {
        background: #ff6057;
        border: 1px solid #e14640;
      }

      &.amber {
        background: #ffbd2e;
        border: 1px solid #dfa123;
      }

      &.green {
        background: #27c93f;
        border: 1px solid #1dad2b;
      }
    }

    &.no-bg {
      background: transparent;
    }

    &.dark {
      background-color: $synx-darkest-color;
      background: linear-gradient(
        5deg,
        $synx-darkest-color,
        $synx-darker-color
      );
    }
  }

  header {
    background-color: adjust-color($synx-black-color, $alpha: -0.375);
    height: 54px;
    position: sticky;
    top: 0;
    z-index: 99;
    backdrop-filter: saturate(1.5) blur(5px);

    .fluid-container {
      width: 90%;
      margin-left: auto;
      margin-right: auto;
    }

    .logo {
      height: 1.75rem;
      padding: 6px 0;
    }

    .github {
      height: 1.75rem;
      padding: 6px 0;
      filter: invert(1);
      text-align: right;
      float: right;
    }
  }

  footer {
    background-color: $synx-black-color;
    padding: 3rem 0 2rem;
    margin-top: 6rem;
    font-size: 16px;
    line-height: 28/16;
    position: relative;

    .fluid-container {
      width: 90%;
      margin-left: auto;
      margin-right: auto;
    }

    h5 {
      margin: -0.325rem -0.5rem;
    }

    p {
      color: $synx-light-color;
      font-size: 0.825em;
    }

    strong {
      color: $synx-lighter-color;
    }

    .tooltip .tooltiptext {
      background-color: #6b55b2;
      background: linear-gradient(25deg, #6b55b2 30%, #6da0ef);
    }

    .tooltip .tooltiptext::after {
      border-color: #695db1 transparent transparent transparent;
    }

    .footer-logo {
      height: 1.75rem;
      opacity: 0.675;
      cursor: pointer;

      &:hover {
        opacity: 1;
      }
    }

    .cc-logo {
      height: 2.25rem;
      opacity: 0.675;
      cursor: pointer;
      filter: invert(1);
      padding-inline: 0.325rem;

      &:hover {
        opacity: 1;
      }
    }

    .cc {
      font-size: 0.625rem;
      padding-inline: 0.325rem;

      a {
        color: $synx-lighter-color;
      }
    }

    .synx-hue-line {
      height: 3px;
      width: 100vw;
      background-image: url("https://synx.ai/static/assets/synx-hue.svg");
      background-position: bottom;
      background-size: cover;
      position: absolute;
      bottom: 0;
      left: 0;
    }
  }

  .container {
    width: 90%;
    margin-left: auto;
    margin-right: auto;

    @media only screen and (min-width: $breakpoint-small) {
      width: 80%;
    }

    @media only screen and (min-width: $breakpoint-large) {
      width: 75%;
      max-width: 60rem;
    }
  }

  .row {
    position: relative;
    width: 100%;
  }

  .row [class^="col"] {
    float: left;
    margin: 0.5rem 2%;
    min-height: 0.125rem;
  }

  .row::after {
    content: "";
    display: table;
    clear: both;
  }

  .col-1,
  .col-2,
  .col-3,
  .col-4,
  .col-5,
  .col-6,
  .col-7,
  .col-8,
  .col-9,
  .col-10,
  .col-11,
  .col-12 {
    width: $width;
  }

  .col-1-sm {
    width: math.div($width, 12) - ($gutter * math.div(11, 12));
  }
  .col-2-sm {
    width: math.div($width, 6) - ($gutter * math.div(10, 12));
  }
  .col-3-sm {
    width: math.div($width, 4) - ($gutter * math.div(9, 12));
  }
  .col-4-sm {
    width: math.div($width, 3) - ($gutter * math.div(8, 12));
  }
  .col-5-sm {
    width: math.div($width, math.div(12, 5)) - ($gutter * math.div(7, 12));
  }
  .col-6-sm {
    width: math.div($width, 2) - ($gutter * math.div(6, 12));
  }
  .col-7-sm {
    width: math.div($width, math.div(12, 7)) - ($gutter * math.div(5, 12));
  }
  .col-8-sm {
    width: math.div($width, math.div(12, 8)) - ($gutter * math.div(4, 12));
  }
  .col-9-sm {
    width: math.div($width, math.div(12, 9)) - ($gutter * math.div(3, 12));
  }
  .col-10-sm {
    width: math.div($width, math.div(12, 10)) - ($gutter * math.div(2, 12));
  }
  .col-11-sm {
    width: math.div($width, math.div(12, 11)) - ($gutter * math.div(1, 12));
  }
  .col-12-sm {
    width: $width;
  }

  @media only screen and (min-width: $breakpoint-med) {
    .col-1 {
      width: math.div($width, 12) - ($gutter * math.div(11, 12));
    }
    .col-2 {
      width: math.div($width, 6) - ($gutter * math.div(10, 12));
    }
    .col-3 {
      width: math.div($width, 4) - ($gutter * math.div(9, 12));
    }
    .col-4 {
      width: math.div($width, 3) - ($gutter * math.div(8, 12));
    }
    .col-5 {
      width: math.div($width, math.div(12, 5)) - ($gutter * math.div(7, 12));
    }
    .col-6 {
      width: math.div($width, 2) - ($gutter * math.div(6, 12));
    }
    .col-7 {
      width: math.div($width, math.div(12, 7)) - ($gutter * math.div(5, 12));
    }
    .col-8 {
      width: math.div($width, math.div(12, 8)) - ($gutter * math.div(4, 12));
    }
    .col-9 {
      width: math.div($width, math.div(12, 9)) - ($gutter * math.div(3, 12));
    }
    .col-10 {
      width: math.div($width, math.div(12, 10)) - ($gutter * math.div(2, 12));
    }
    .col-11 {
      width: math.div($width, math.div(12, 11)) - ($gutter * math.div(1, 12));
    }
    .col-12 {
      width: $width;
    }

    .hidden-sm {
      display: block;
    }
  }
}
